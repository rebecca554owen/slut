name: openppp2-docker-2-build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (默认使用latest)'
        required: false
        default: 'latest'

env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: ${{ github.repository_owner }}/openppp2

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            arch_tag: amd64
          - platform: linux/arm64
            arch_tag: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag
        id: get_tag
        run: |
          # 如果用户未输入tag或输入"latest"，则使用默认值"latest"
          if [ -z "${{ github.event.inputs.tag }}" ] || [ "${{ github.event.inputs.tag }}" == "latest" ]; then
            TAG="latest"
          else
            TAG=${{ github.event.inputs.tag }}
          fi
          
          # 检查tag是否符合Docker tag规则
          if ! echo "$TAG" | grep -Eq '^[a-zA-Z0-9_][a-zA-Z0-9_.-]{0,127}$'; then
            echo "::error::生成的tag'$TAG'不符合Docker tag规则。Docker tag必须满足以下条件："
            echo "::error::1. 只能包含小写字母、数字、下划线(_)、点(.)和连字符(-)"
            echo "::error::2. 必须以字母或数字开头"
            echo "::error::3. 长度不能超过128个字符"
            exit 1
          fi
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./openppp/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}-${{ matrix.arch_tag }}
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}-${{ matrix.arch_tag }}

  create-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest for Docker Hub
        run: |
          docker manifest create ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:latest \
            --amend ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.tag }}-amd64 \
            --amend ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.tag }}-arm64
          docker manifest push ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:latest

      - name: Create and push manifest for GHCR
        run: |
          docker manifest create ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}:latest \
            --amend ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.tag }}-amd64 \
            --amend ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.tag }}-arm64
          docker manifest push ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}:latest